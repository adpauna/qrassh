{
  "results": {
    "whoami": "root\nroot@unitTest:~# ",
    "users": "root\nroot@unitTest:~# ",
    "alias":  [ "root@unitTest:~# " ],
    "export":  [ "root@unitTest:~# " ],
    "chattr":  [ "root@unitTest:~# " ],
    "chgrp":  [ "root@unitTest:~# " ],
    "chown":  [ "root@unitTest:~# " ],
    "jobs":  [ "root@unitTest:~# " ],
    "kill":  [ "root@unitTest:~# " ],
    "su":  [ "root@unitTest:~# " ],
    "jobs":  [ "root@unitTest:~# " ],
    "php":  [ "root@unitTest:~# " ],
    "python":  [ "root@unitTest:~# " ],
    "unset":  [ "root@unitTest:~# " ],
    "set":  [ "root@unitTest:~# " ],
    "umask":  [ "root@unitTest:~# " ],
    "id" : [ "uid=0(root) gid=0(root) groups=0(root)\nroot@unitTest:~# " ],
    "help": [
      "GNU bash, version 4.2.37(1)-release (x86_64-pc-linux-gnu)",
      "These shell commands are defined internally.  Type `help' to see this list.",
      "Type `help name' to find out more about the function `name'.",
      "Use `info bash' to find out more about the shell in general.",
      "Use `man -k' or `info' to find out more about commands not in this list.",
      "",
      "A star (*) next to a name means that the command is disabled.",
      "",
      " job_spec [&]                                                                                   history [-c] [-d offset] [n] or history -anrw [filename] or history -ps arg [arg...]",
      " (( expression ))                                                                               if COMMANDS; then COMMANDS; [ elif COMMANDS; then COMMANDS; ]... [ else COMMANDS; ] fi",
      " . filename [arguments]                                                                         jobs [-lnprs] [jobspec ...] or jobs -x command [args]",
      " :                                                                                              kill [-s sigspec | -n signum | -sigspec] pid | jobspec ... or kill -l [sigspec]",
      " [ arg... ]                                                                                     let arg [arg ...]",
      " [[ expression ]]                                                                               local [option] name[=value] ...",
      " alias [-p] [name[=value] ... ]                                                                 logout [n]",
      " bg [job_spec ...]                                                                              mapfile [-n count] [-O origin] [-s count] [-t] [-u fd] [-C callback] [-c quantum] [array]",
      " bind [-lpvsPVS] [-m keymap] [-f filename] [-q name] [-u name] [-r keyseq] [-x keyseq:shell-c>  popd [-n] [+N | -N]",
      " break [n]                                                                                      printf [-v var] format [arguments]",
      " builtin [shell-builtin [arg ...]]                                                              pushd [-n] [+N | -N | dir]",
      " caller [expr]                                                                                  pwd [-LP]",
      " case WORD in [PATTERN [| PATTERN]...) COMMANDS ;;]... esac                                     read [-ers] [-a array] [-d delim] [-i text] [-n nchars] [-N nchars] [-p prompt] [-t timeout>",
      " cd [-L|[-P [-e]]] [dir]                                                                        readarray [-n count] [-O origin] [-s count] [-t] [-u fd] [-C callback] [-c quantum] [array]>",
      " command [-pVv] command [arg ...]                                                               readonly [-aAf] [name[=value] ...] or readonly -p",
      " compgen [-abcdefgjksuv] [-o option]  [-A action] [-G globpat] [-W wordlist]  [-F function] [>  return [n]",
      " complete [-abcdefgjksuv] [-pr] [-DE] [-o option] [-A action] [-G globpat] [-W wordlist]  [-F>  select NAME [in WORDS ... ;] do COMMANDS; done",
      " compopt [-o|+o option] [-DE] [name ...]                                                        set [-abefhkmnptuvxBCHP] [-o option-name] [--] [arg ...]",
      " continue [n]                                                                                   shift [n]",
      " coproc [NAME] command [redirections]                                                           shopt [-pqsu] [-o] [optname ...]",
      " declare [-aAfFgilrtux] [-p] [name[=value] ...]                                                 source filename [arguments]",
      " dirs [-clpv] [+N] [-N]                                                                         suspend [-f]",
      " disown [-h] [-ar] [jobspec ...]                                                                test [expr]",
      " echo [-neE] [arg ...]                                                                          time [-p] pipeline",
      " enable [-a] [-dnps] [-f filename] [name ...]                                                   times",
      " eval [arg ...]                                                                                 trap [-lp] [[arg] signal_spec ...]",
      " exec [-cl] [-a name] [command [arguments ...]] [redirection ...]                               true",
      " exit [n]                                                                                       type [-afptP] name [name ...]",
      " export [-fn] [name[=value] ...] or export -p                                                   typeset [-aAfFgilrtux] [-p] name[=value] ...",
      " false                                                                                          ulimit [-SHacdefilmnpqrstuvx] [limit]",
      " fc [-e ename] [-lnr] [first] [last] or fc -s [pat=rep] [command]                               umask [-p] [-S] [mode]",
      " fg [job_spec]                                                                                  unalias [-a] name [name ...]",
      " for NAME [in WORDS ... ] ; do COMMANDS; done                                                   unset [-f] [-v] [name ...]",
      " for (( exp1; exp2; exp3 )); do COMMANDS; done                                                  until COMMANDS; do COMMANDS; done",
      " function name { COMMANDS ; } or name () { COMMANDS ; }                                         variables - Names and meanings of some shell variables",
      " getopts optstring name [arg]                                                                   wait [id]",
      " hash [-lr] [-p pathname] [-dt] [name ...]                                                      while COMMANDS; do COMMANDS; done",
      " help [-dms] [pattern ...]                                                                      { COMMANDS ; }",
      "root@unitTest:~# "
    ],
    "date": [ "[A-Za-z][A-Za-z][A-Za-z] [A-Za-z][A-Za-z][A-Za-z] [0-9][0-9] [0-9][0-9]:[0-9][0-9]:[0-9][0-9] UTC [0-9][0-9][0-9][0-9]" ],
    "w": [
      " [0-9][0-9]:[0-9][0-9]:[0-9][0-9] up [0-9 ]+[a-zA-Z]+, +[0-9: ]+, [0-9 ]+user, +load average: [0-9., ]+",
      "USER +TTY +FROM + LOGIN@ +IDLE  +JCPU +PCPU +WHAT",
      "[a-zA-Z]+ +pts\/[0-9] +[0-9.]+ +[0-9:]+ +[0-9s. ]+ +[a-zA-Z0-9 ]+",
      "root@unitTest:~#"
    ],
    "who": [
      "root +pts\/0 +2[0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9] [0-3][0-9]:[0-5][0-9][0-9(). ]+",
      "root@unitTest:~# "
    ],
    "echo": [
      "test worked correctly",
      "root@unitTest:~# "
    ],
    "hostname": [
      "root@unitChanged:~# "
    ],
    "ps": [
      " PID TTY         TIME COMMAND",
      "5673 pts/0       0:00 -bash",
      "5679 pts/0       0:00 ps ",
      "root@unitTest:~# "
    ],
    "passwd": [ "Enter new UNIX password: Retype new UNIX password: passwd: password updated successfully\nroot@unitTest:~# "
    ],
    "history": [ "   1  history"]
  }
}
